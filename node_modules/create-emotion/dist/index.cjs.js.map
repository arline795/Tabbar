{"version":3,"file":"index.cjs.js","sources":["../src/utils.js","../src/sheet.js","../src/index.js"],"sourcesContent":["// @flow\nimport { memoize, unitless } from 'emotion-utils'\n\nconst hyphenateRegex = /[A-Z]|^ms/g\n\nexport const processStyleName: (styleName: string) => string = memoize(\n  (styleName: string) => styleName.replace(hyphenateRegex, '-$&').toLowerCase()\n)\n\nexport const processStyleValue = (key: string, value: string): string => {\n  if (value == null || typeof value === 'boolean') {\n    return ''\n  }\n\n  if (\n    unitless[key] !== 1 &&\n    key.charCodeAt(1) !== 45 && // custom properties\n    !isNaN(value) &&\n    value !== 0\n  ) {\n    return value + 'px'\n  }\n  return value\n}\n\nexport type ClassNameArg =\n  | string\n  | boolean\n  | (() => ClassNameArg)\n  | { [key: string]: boolean }\n  | Array<ClassNameArg>\n\nexport const classnames = (args: Array<ClassNameArg>): string => {\n  let len = args.length\n  let i = 0\n  let cls = ''\n  for (; i < len; i++) {\n    let arg = args[i]\n    if (arg == null) continue\n\n    let toAdd\n    switch (typeof arg) {\n      case 'boolean':\n        break\n      case 'function':\n        toAdd = classnames([arg()])\n        break\n      case 'object': {\n        if (Array.isArray(arg)) {\n          toAdd = classnames(arg)\n        } else {\n          toAdd = ''\n          for (const k in arg) {\n            if (arg[k] && k) {\n              toAdd && (toAdd += ' ')\n              toAdd += k\n            }\n          }\n        }\n        break\n      }\n      default: {\n        toAdd = arg\n      }\n    }\n    if (toAdd) {\n      cls && (cls += ' ')\n      cls += toAdd\n    }\n  }\n  return cls\n}\n\nexport const isBrowser = typeof document !== 'undefined'\n\nexport type PrefixOption =\n  | boolean\n  | ((key: string, value: string, context: 1 | 2 | 3) => boolean)\n\nexport type StylisOptions = {\n  keyframe?: boolean,\n  compress?: boolean,\n  global?: boolean,\n  cascade?: boolean,\n  semicolon?: boolean,\n  preserve?: boolean,\n  prefix?: PrefixOption\n}\n","// @flow\n/*\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n- 'polyfills' on server side\n\n// usage\n\nimport StyleSheet from 'glamor/lib/sheet'\nlet styleSheet = new StyleSheet()\n\nstyleSheet.inject()\n- 'injects' the stylesheet into the page (or into memory if on server)\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n\n// $FlowFixMe\nfunction sheetForTag(tag: HTMLStyleElement): CSSStyleSheet {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet\n  }\n\n  // this weirdness brought to you by firefox\n  for (let i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i]\n    }\n  }\n}\n\ntype Options = { nonce?: string, key?: string, container?: HTMLElement }\n\nfunction makeStyleTag(opts: Options): HTMLStyleElement {\n  let tag = document.createElement('style')\n  tag.type = 'text/css'\n  tag.setAttribute('data-emotion', opts.key || '')\n  if (opts.nonce !== undefined) {\n    tag.setAttribute('nonce', opts.nonce)\n  }\n  tag.appendChild(document.createTextNode(''))\n  // $FlowFixMe\n  ;(opts.container !== undefined ? opts.container : document.head).appendChild(\n    tag\n  )\n  return tag\n}\n\nexport default class StyleSheet {\n  injected: boolean\n  isSpeedy: boolean\n  ctr: number\n  sheet: string[]\n  tags: HTMLStyleElement[]\n  nonce: string | void\n  opts: Options\n  constructor(options: Options) {\n    this.isSpeedy = process.env.NODE_ENV === 'production' // the big drawback here is that the css won't be editable in devtools\n    this.tags = []\n    this.ctr = 0\n    this.opts = options\n  }\n  inject() {\n    if (this.injected) {\n      throw new Error('already injected!')\n    }\n    this.tags[0] = makeStyleTag(this.opts)\n    this.injected = true\n  }\n  speedy(bool: boolean) {\n    if (this.ctr !== 0) {\n      // cannot change speedy mode after inserting any rule to sheet. Either call speedy(${bool}) earlier in your app, or call flush() before speedy(${bool})\n      throw new Error(`cannot change speedy now`)\n    }\n    this.isSpeedy = !!bool\n  }\n  insert(rule: string, sourceMap?: string) {\n    // this is the ultrafast version, works across browsers\n    if (this.isSpeedy) {\n      const tag = this.tags[this.tags.length - 1]\n      const sheet = sheetForTag(tag)\n      try {\n        sheet.insertRule(rule, sheet.cssRules.length)\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn('illegal rule', rule) // eslint-disable-line no-console\n        }\n      }\n    } else {\n      const tag = makeStyleTag(this.opts)\n      this.tags.push(tag)\n      tag.appendChild(document.createTextNode(rule + (sourceMap || '')))\n    }\n    this.ctr++\n    if (this.ctr % 65000 === 0) {\n      this.tags.push(makeStyleTag(this.opts))\n    }\n  }\n  flush() {\n    // $FlowFixMe\n    this.tags.forEach(tag => tag.parentNode.removeChild(tag))\n    this.tags = []\n    this.ctr = 0\n    // todo - look for remnants in document.styleSheets\n    this.injected = false\n  }\n}\n","// @flow\nimport { hashString, Stylis, STYLES_KEY } from 'emotion-utils'\nimport stylisRuleSheet from 'stylis-rule-sheet'\nimport {\n  processStyleName,\n  processStyleValue,\n  classnames,\n  isBrowser\n} from './utils'\nimport StyleSheet from './sheet'\nimport type { PrefixOption, StylisOptions, ClassNameArg } from './utils'\n\ntype StylisPlugins = Function[] | null | Function\n\ntype EmotionCaches = {|\n  registered: { [key: string]: string },\n  inserted: { [key: string]: string | true },\n  nonce?: string,\n  key: string\n|}\n\n// this should probably be an actual type but it's hard to do without errors\nexport type Interpolation = any\n// | string\n// | number\n// | void\n// | boolean\n// | null\n// | Object\n// | Array<Interpolation>\n// | (() => Interpolation)\n// | ((props?: Object, context?: Object) => Interpolation)\n\nexport type Interpolations = Array<Interpolation>\n\ntype CreateStyles<ReturnValue> = (...args: Interpolations) => ReturnValue\n\nexport type Emotion = {\n  css: CreateStyles<string>,\n  cx: (...classNames: Array<ClassNameArg>) => string,\n  flush: () => void,\n  getRegisteredStyles: (\n    registeredStyles: Array<string>,\n    classNames: string\n  ) => string,\n  hydrate: (ids: Array<string>) => void,\n  injectGlobal: CreateStyles<void>,\n  keyframes: CreateStyles<string>,\n  merge: (className: string, sourceMap?: string) => string,\n  sheet: StyleSheet,\n  caches: EmotionCaches\n}\n\ntype EmotionOptions = {\n  nonce?: string,\n  stylisPlugins?: StylisPlugins,\n  prefix?: PrefixOption,\n  key?: string,\n  container?: HTMLElement\n}\n\nfunction createEmotion(\n  context: { __SECRET_EMOTION__?: Emotion },\n  options?: EmotionOptions\n): Emotion {\n  if (context.__SECRET_EMOTION__ !== undefined) {\n    return context.__SECRET_EMOTION__\n  }\n  if (options === undefined) options = {}\n  let key = options.key || 'css'\n  if (process.env.NODE_ENV !== 'production') {\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\n        `Emotion key must only contain lower case alphabetical characters and - but \"${key}\" was passed`\n      )\n    }\n  }\n  let current\n  function insertRule(rule: string) {\n    current += rule\n    if (isBrowser) {\n      sheet.insert(rule, currentSourceMap)\n    }\n  }\n\n  const insertionPlugin = stylisRuleSheet(insertRule)\n\n  const stylisOptions: StylisOptions = {\n    keyframe: false,\n    global: false,\n    prefix: options.prefix === undefined ? true : options.prefix,\n    semicolon: true\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    stylisOptions.compress = false\n  }\n\n  const caches = {\n    registered: {},\n    inserted: {},\n    nonce: options.nonce,\n    key\n  }\n\n  const sheet = new StyleSheet(options)\n\n  if (isBrowser) {\n    // ðŸš€\n    sheet.inject()\n  }\n\n  let stylis = new Stylis(stylisOptions)\n  stylis.use(options.stylisPlugins)(insertionPlugin)\n\n  let currentSourceMap = ''\n\n  function handleInterpolation(\n    interpolation: Interpolation,\n    couldBeSelectorInterpolation: boolean\n  ): string | number {\n    if (interpolation == null) {\n      return ''\n    }\n\n    switch (typeof interpolation) {\n      case 'boolean':\n        return ''\n      case 'function':\n        if (interpolation[STYLES_KEY] !== undefined) {\n          let selector = interpolation.toString()\n          if (\n            selector === 'NO_COMPONENT_SELECTOR' &&\n            process.env.NODE_ENV !== 'production'\n          ) {\n            throw new Error(\n              'Component selectors can only be used in conjunction with babel-plugin-emotion.'\n            )\n          }\n          return selector\n        }\n        return handleInterpolation.call(\n          this,\n          this === undefined\n            ? interpolation()\n            : // $FlowFixMe\n              interpolation(this.mergedProps, this.context),\n          couldBeSelectorInterpolation\n        )\n      case 'object':\n        return createStringFromObject.call(this, interpolation)\n      default:\n        const cached = caches.registered[interpolation]\n        return couldBeSelectorInterpolation === false && cached !== undefined\n          ? cached\n          : interpolation\n    }\n  }\n\n  const objectToStringCache = new WeakMap()\n\n  function createStringFromObject(obj: {\n    [key: string]: Interpolation\n  }): string {\n    if (objectToStringCache.has(obj)) {\n      // $FlowFixMe\n      return objectToStringCache.get(obj)\n    }\n    let string = ''\n\n    if (Array.isArray(obj)) {\n      obj.forEach(function(interpolation: Interpolation) {\n        string += handleInterpolation.call(this, interpolation, false)\n      }, this)\n    } else {\n      Object.keys(obj).forEach(function(key: string) {\n        if (typeof obj[key] !== 'object') {\n          if (caches.registered[obj[key]] !== undefined) {\n            string += `${key}{${caches.registered[obj[key]]}}`\n          } else {\n            string += `${processStyleName(key)}:${processStyleValue(\n              key,\n              obj[key]\n            )};`\n          }\n        } else {\n          if (\n            key === 'NO_COMPONENT_SELECTOR' &&\n            process.env.NODE_ENV !== 'production'\n          ) {\n            throw new Error(\n              'Component selectors can only be used in conjunction with babel-plugin-emotion.'\n            )\n          }\n\n          string += `${key}{${handleInterpolation.call(this, obj[key], false)}}`\n        }\n      }, this)\n    }\n    objectToStringCache.set(obj, string)\n\n    return string\n  }\n\n  let name\n  let stylesWithLabel\n\n  const labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g\n\n  const createStyles: CreateStyles<string> = function(\n    strings: Interpolation | string[],\n    ...interpolations: Interpolation[]\n  ) {\n    let stringMode = true\n    let styles: string = ''\n    let identifierName = ''\n\n    if (strings == null || strings.raw === undefined) {\n      stringMode = false\n      styles += handleInterpolation.call(this, strings, false)\n    } else {\n      styles += strings[0]\n    }\n\n    interpolations.forEach(function(interpolation, i) {\n      styles += handleInterpolation.call(\n        this,\n        interpolation,\n        styles.charCodeAt(styles.length - 1) === 46 // .\n      )\n      if (stringMode === true && strings[i + 1] !== undefined) {\n        styles += strings[i + 1]\n      }\n    }, this)\n    stylesWithLabel = styles\n    styles = styles.replace(labelPattern, (match, p1: string) => {\n      identifierName += `-${p1}`\n      return ''\n    })\n    name = hashString(styles + identifierName) + identifierName\n    return styles\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    const sourceMapRegEx = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//\n    const oldStylis = stylis\n    stylis = (selector, styles) => {\n      const result = sourceMapRegEx.exec(styles)\n      currentSourceMap = result ? result[0] : ''\n      oldStylis(selector, styles)\n      currentSourceMap = ''\n    }\n  }\n  function insert(scope, styles) {\n    if (caches.inserted[name] === undefined) {\n      current = ''\n      stylis(scope, styles)\n      caches.inserted[name] = current\n    }\n  }\n  const css: CreateStyles<string> = function css() {\n    const styles = createStyles.apply(this, arguments)\n    const selector = `${key}-${name}`\n\n    if (caches.registered[selector] === undefined) {\n      caches.registered[selector] = stylesWithLabel\n    }\n    insert(`.${selector}`, styles)\n\n    return selector\n  }\n\n  const keyframes: CreateStyles<string> = function keyframes() {\n    const styles = createStyles.apply(this, arguments)\n    const animation = `animation-${name}`\n    insert('', `@keyframes ${animation}{${styles}}`)\n\n    return animation\n  }\n\n  const injectGlobal: CreateStyles<void> = function injectGlobal() {\n    const styles = createStyles.apply(this, arguments)\n    insert('', styles)\n  }\n\n  function getRegisteredStyles(registeredStyles: string[], classNames: string) {\n    let rawClassName = ''\n\n    classNames.split(' ').forEach(className => {\n      if (caches.registered[className] !== undefined) {\n        registeredStyles.push(className)\n      } else {\n        rawClassName += `${className} `\n      }\n    })\n    return rawClassName\n  }\n\n  function merge(className: string, sourceMap?: string) {\n    const registeredStyles = []\n\n    const rawClassName = getRegisteredStyles(registeredStyles, className)\n\n    if (registeredStyles.length < 2) {\n      return className\n    }\n    return rawClassName + css(registeredStyles, sourceMap)\n  }\n\n  function cx(...classNames: Array<ClassNameArg>) {\n    return merge(classnames(classNames))\n  }\n\n  function hydrateSingleId(id: string) {\n    caches.inserted[id] = true\n  }\n\n  function hydrate(ids: string[]) {\n    ids.forEach(hydrateSingleId)\n  }\n\n  function flush() {\n    if (isBrowser) {\n      sheet.flush()\n      sheet.inject()\n    }\n    caches.inserted = {}\n    caches.registered = {}\n  }\n\n  if (isBrowser) {\n    let chunks = document.querySelectorAll(`[data-emotion-${key}]`)\n    Array.prototype.forEach.call(chunks, node => {\n      // $FlowFixMe\n      sheet.tags[0].parentNode.insertBefore(node, sheet.tags[0])\n      // $FlowFixMe\n      node\n        .getAttribute(`data-emotion-${key}`)\n        .split(' ')\n        .forEach(hydrateSingleId)\n    })\n  }\n\n  const emotion = {\n    flush,\n    hydrate,\n    cx,\n    merge,\n    getRegisteredStyles,\n    injectGlobal,\n    keyframes,\n    css,\n    sheet,\n    caches\n  }\n  context.__SECRET_EMOTION__ = emotion\n  return emotion\n}\n\nexport default createEmotion\n"],"names":["hyphenateRegex","processStyleName","memoize","styleName","replace","toLowerCase","processStyleValue","key","value","unitless","charCodeAt","isNaN","classnames","args","len","length","i","cls","arg","toAdd","Array","isArray","k","isBrowser","document","sheetForTag","tag","sheet","styleSheets","ownerNode","makeStyleTag","opts","createElement","type","setAttribute","nonce","undefined","appendChild","createTextNode","container","head","options","isSpeedy","process","env","NODE_ENV","tags","ctr","injected","Error","bool","rule","sourceMap","insertRule","cssRules","e","warn","push","parentNode","removeChild","forEach","StyleSheet","inject","speedy","insert","flush","createEmotion","context","__SECRET_EMOTION__","test","current","currentSourceMap","insertionPlugin","stylisRuleSheet","stylisOptions","prefix","compress","caches","stylis","Stylis","use","stylisPlugins","handleInterpolation","interpolation","couldBeSelectorInterpolation","STYLES_KEY","selector","toString","call","mergedProps","createStringFromObject","cached","registered","objectToStringCache","WeakMap","obj","has","get","string","keys","set","name","stylesWithLabel","labelPattern","createStyles","strings","stringMode","styles","identifierName","raw","interpolations","match","p1","hashString","sourceMapRegEx","oldStylis","result","exec","scope","inserted","css","apply","arguments","keyframes","animation","injectGlobal","getRegisteredStyles","registeredStyles","classNames","rawClassName","split","className","merge","cx","hydrateSingleId","id","hydrate","ids","insertBefore","node","getAttribute","chunks","querySelectorAll","prototype","emotion"],"mappings":"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"}